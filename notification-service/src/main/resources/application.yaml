spring:
  application:
    name: notification-service
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:45432/postgres}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
  jpa:
    open-in-view: false
    show-sql: true
  mail:
    host: ${MAIL_HOST:127.0.0.1}
    port: ${MAIL_PORT:1025}
    username: ${MAIL_USERNAME:PLACEHOLDER}
    password: ${MAIL_PASSWORD:PLACEHOLDER}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.geovannycode.ecommerce.notification.domain.model,com.geovannycode.ecommerce.order.common.model
        spring.json.use.type.headers: false
        spring.json.value.default.type: java.lang.String

server:
  port: 8084
  shutdown: graceful

# Configuraciï¿½n para Kafka
notification:
  order-created-topic: new-orders-topic
  order-delivered-topic: delivered-orders-topic
  order-cancelled-topic: cancelled-orders-topic
  order-error-topic: error-orders-topic
  support-email: geovanny0401@gmail.com

management:
  info:
    git:
      mode: full
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    tags:
      application: ${spring.application.name}
  tracing:
    enabled: false
    sampling:
      probability: 1.0